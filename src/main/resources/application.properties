server.port=8080
spring.application.name=@project.name@
spring.application.description=@project.description@
spring.application.version=@project.version@
# 日期格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
# health
management.endpoint.health.show-details=always
debug=false
spring.profiles.active=dev
# actuator
management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=*
# new test Sentinel
spring.redis.sentinel.master=cc-redis-backup-02
spring.redis.sentinel.nodes=10.125.128.187:32513,10.125.128.188:32510,10.125.128.189:32510
spring.redis.password=O1Gr7E42v1
# hystrix
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
# kafka test
kafka.common.servers=10.125.128.125:32014,10.125.128.94:32014,10.125.128.102:32014
kafka.common.username=xkf_cc
kafka.common.password=qx4&ZTZ4^X
kafka.producer.topic=cc-sms-send
# consumer
kafka.consumer.topic=${kafka.producer.topic}
kafka.consumer.groupId=${kafka.consumer.topic}
kafka.consumer.autoOffsetReset=latest
kafka.consumer.maxPollRecords=100
kafka.consumer.maxPollInterval=300000
kafka.consumer.sessionTimeOut=60000
kafka.consumer.requestTimeOut=60000
kafka.consumer.concurrency=1
kafka.consumer.consumerInterval=1000
kafka.consumer.sendInterval=50

# ack
kafka.producer.ack=1
# if produce failed retry
kafka.producer.retries=0
# produce delay 0 ms
kafka.producer.linger=0
