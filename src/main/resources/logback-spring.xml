<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<contextName>spring-boot-demo</contextName>
	<springProperty scope="context" name="app.name"
		source="spring.application.name" defaultValue="spring-boot-demo" />
	<property name="log.path" value="logs/busi" />
	<property name="console.pattern"
		value="%d{YYYY-MM-dd HH:mm:ss:SSS} %property{app.name} [%thread] %-5level %logger{36}[%L] [TxId : %X{PtxId} , SpanId : %X{PspanId}]- %msg%n" />
	<property name="file.pattern"
		value="%d{YYYY-MM-dd HH:mm:ss:SSS} %property{app.name} [%thread] %-5level %logger{36}[%L] [TxId : %X{PtxId} , SpanId : %X{PspanId}]- %msg%n" />

	<!--输出到控制台 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!--设置字符过滤器 -->
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<expression>
                    <![CDATA[logger.contains("http.wire-log")]]>
				</expression>
			</evaluator>
			<OnMismatch>NEUTRAL</OnMismatch>
			<OnMatch>DENY</OnMatch>
		</filter>
		<encoder>
			<pattern>${console.pattern}</pattern>
			<charset>utf8</charset>
		</encoder>
	</appender>

	<!-- 输出到文件 info -->
	<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--设置字符过滤器 -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>
                    <![CDATA[logger.contains("http.wire-log")]]>
                </expression>
            </evaluator>
            <OnMismatch>NEUTRAL</OnMismatch>
            <OnMatch>DENY</OnMatch>
        </filter>
		<file>${log.path}/${app.name}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.path}/${app.name}-info.log.%i</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>100MB</maxFileSize>
		</triggeringPolicy>
		<layout>
			<pattern>${file.pattern}</pattern>
		</layout>
	</appender>
	<!-- 输出到文件 error -->
	<appender name="file-error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--设置字符过滤器 -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>
                    <![CDATA[logger.contains("http.wire-log")]]>
                </expression>
            </evaluator>
            <OnMismatch>NEUTRAL</OnMismatch>
            <OnMatch>DENY</OnMatch>
        </filter>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>WARN</level>
		</filter>
		<file>${log.path}/${app.name}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.path}/${app.name}-error.log.%i
			</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>100MB</maxFileSize>
		</triggeringPolicy>
		<layout>
			<pattern>${file.pattern}</pattern>
		</layout>
	</appender>
	<!-- 输出到文件 logbook -->
    <appender name="file-logbook"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--设置字符过滤器 -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>return logger.contains("http.wire-log");</expression>
            </evaluator>
            <OnMatch>ACCEPT</OnMatch>
            <OnMismatch>DENY</OnMismatch>
        </filter>
        <file>${log.path}/${app.name}.httpwire</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log.path}/${app.name}.httpwire.%i</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <layout>
            <pattern>${file.pattern}</pattern>
        </layout>
    </appender>

	<!-- 本地调试环境
		  日志级别：debug
		  输出：info.log  error.log console(控制台)
	-->
	<springProfile name="local">
        <root level= "debug" >
            <appender-ref ref="console"/>
            <appender-ref ref="file"/>
            <appender-ref ref="file-error" />
            <appender-ref ref="file-logbook" />
        </root>
    </springProfile>

	<!-- 开发环境 (是指微服务平台的开发环境)
		  日志级别：info
		  输出：info.log  error.log
	-->
	<springProfile name="dev">
		<root level="info">
			<appender-ref ref="console"/>
            <appender-ref ref="file"/>
            <appender-ref ref="file-error" />
            <appender-ref ref="file-logbook" />
		</root>
	</springProfile>

	<!-- 测试环境 (是指微服务平台的测试环境)
		  日志级别：info
		  输出：info.log  error.log
	-->
	<springProfile name="test">
		<root level="info">
            <appender-ref ref="file"/>
            <appender-ref ref="file-error" />
            <appender-ref ref="file-logbook" />
		</root>
	</springProfile>

	<!-- 生产环境
		  日志级别：error
		  输出：info.log error.log
		  如果需要打印某个包下的其它级别日志可以配置，如：
            <logger name="com.cbss" level="info" >
	-->
    <springProfile name="prod">
        <root level= "error" >
            <appender-ref ref="file"/>
            <appender-ref ref="file-error" />
            <appender-ref ref="file-logbook" />
        </root>
        <logger name="com.unicom" level="info" />
        <logger name="http.wire-log" level="info"/>
    </springProfile>

	<!-- 准生产 -->
	<springProfile name="sim">
		<root level="info">
			<appender-ref ref="file"/>
			<appender-ref ref="file-error" />
			<appender-ref ref="file-logbook" />
		</root>
	</springProfile>

</configuration>
